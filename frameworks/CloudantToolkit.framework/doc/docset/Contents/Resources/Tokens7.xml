<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/IMFDataManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/IMFDataManager</TokenIdentifier>
			<Abstract type="html">The IMFDataManager is the central point for interacting with the Cloudant NoSQL database.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/setDefaultMapper:</TokenIdentifier>
			<Abstract type="html">Specifies the default object mapper. This CDTObjectMapper is automatically set when a CDTStore is created.  By default, this value is set to the CDTDataObjectMapper class.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) id&lt;CDTObjectMapper&gt; defaultMapper</Declaration>
			
			
			<Anchor>//api/name/defaultMapper</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/defaultMapper</TokenIdentifier>
			<Abstract type="html">Specifies the default object mapper. This CDTObjectMapper is automatically set when a CDTStore is created.  By default, this value is set to the CDTDataObjectMapper class.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) id&lt;CDTObjectMapper&gt; defaultMapper</Declaration>
			
			
			<Anchor>//api/name/defaultMapper</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IMFDataManager/defaultMapper</TokenIdentifier>
			<Abstract type="html">Specifies the default object mapper. This CDTObjectMapper is automatically set when a CDTStore is created.  By default, this value is set to the CDTDataObjectMapper class.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) id&lt;CDTObjectMapper&gt; defaultMapper</Declaration>
			
			
			<Anchor>//api/name/defaultMapper</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/setDatastoreManager:</TokenIdentifier>
			<Abstract type="html">Specifies the CDTDatastoreManager for this class.  This CDTDatastoreManager is used to create all CDTDatastore instances.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, atomic) CDTDatastoreManager *datastoreManager</Declaration>
			
			
			<Anchor>//api/name/datastoreManager</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/datastoreManager</TokenIdentifier>
			<Abstract type="html">Specifies the CDTDatastoreManager for this class.  This CDTDatastoreManager is used to create all CDTDatastore instances.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, atomic) CDTDatastoreManager *datastoreManager</Declaration>
			
			
			<Anchor>//api/name/datastoreManager</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IMFDataManager/datastoreManager</TokenIdentifier>
			<Abstract type="html">Specifies the CDTDatastoreManager for this class.  This CDTDatastoreManager is used to create all CDTDatastore instances.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, atomic) CDTDatastoreManager *datastoreManager</Declaration>
			
			
			<Anchor>//api/name/datastoreManager</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/setReplicatorFactory:</TokenIdentifier>
			<Abstract type="html">Specifies the CDTReplicatorFactory to be used with all CDTDatastore instances created with this IMFDataManager.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, atomic) CDTReplicatorFactory *replicatorFactory</Declaration>
			
			
			<Anchor>//api/name/replicatorFactory</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/replicatorFactory</TokenIdentifier>
			<Abstract type="html">Specifies the CDTReplicatorFactory to be used with all CDTDatastore instances created with this IMFDataManager.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, atomic) CDTReplicatorFactory *replicatorFactory</Declaration>
			
			
			<Anchor>//api/name/replicatorFactory</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IMFDataManager/replicatorFactory</TokenIdentifier>
			<Abstract type="html">Specifies the CDTReplicatorFactory to be used with all CDTDatastore instances created with this IMFDataManager.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, atomic) CDTReplicatorFactory *replicatorFactory</Declaration>
			
			
			<Anchor>//api/name/replicatorFactory</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/IMFDataManager/sharedInstance</TokenIdentifier>
			<Abstract type="html">IMFDataManager is a singleton that can be accessed with this method.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">The sharedInstance of the IMFDataManager.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/localStore:error:</TokenIdentifier>
			<Abstract type="html">Creates a local CDTStore.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>- (CDTStore *)localStore:(NSString *)name error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Specifies the name of the store.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Specifies any errors, if an error was encountered.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the newly created CDTStore</Abstract></ReturnValue>
			<Anchor>//api/name/localStore:error:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/remoteStore:completionHandler:</TokenIdentifier>
			<Abstract type="html">Creates a remote CDTStore.  The remote store is automatically configured to communicate with the Bluemix Cloudant database.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>- (void)remoteStore:(NSString *)name completionHandler:(void ( ^ ) ( CDTStore *store , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Specifies the name of the data store.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Specifies the completion handler that gets invoked when the operation is completed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/remoteStore:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/pullReplicationForStore:</TokenIdentifier>
			<Abstract type="html">Generates a CDTPullReplication object to be used to replicate with local CDTStore created with this manager.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>- (CDTPullReplication *)pullReplicationForStore:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Specifies the name of the data store to replicate from remote to local.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the CDTPullReplication object to be used.</Abstract></ReturnValue>
			<Anchor>//api/name/pullReplicationForStore:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/pushReplicationForStore:</TokenIdentifier>
			<Abstract type="html">Generates a CDTPullReplication object to be used to replicate with local CDTStore created with this manager.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>- (CDTPushReplication *)pushReplicationForStore:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">Specifies the name of the data store to replicate from local to remote.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the CDTPushReplication object to be used.</Abstract></ReturnValue>
			<Anchor>//api/name/pushReplicationForStore:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IMFDataManager/setCurrentUserPermissions:forStoreName:completionHander:</TokenIdentifier>
			<Abstract type="html">Sets user permissions on a remote Cloudant database.</Abstract>
			<DeclaredIn>IMFDataManager.h</DeclaredIn>
			
			<Declaration>- (void)setCurrentUserPermissions:(NSString *)access forStoreName:(NSString *)storeName completionHander:(void ( ^ ) ( BOOL success , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>access</Name>
					<Abstract type="html">Specifies the access group to which to add the user.  Valid values are admins or members.  For convenience, constants are provided above (DBACCESSGROUPADMINS and DBACCESSGROUPMEMBERS)</Abstract>
				</Parameter><Parameter>
					<Name>storeName</Name>
					<Abstract type="html">Specifies the name of the remote Cloudant database on which to set permissions.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Specifies the completion handler that gets invoked when the operation is completed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCurrentUserPermissions:forStoreName:completionHander:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
	</File>
</Tokens>